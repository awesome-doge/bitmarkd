// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// to parse Listeners parameter from announce module
type Addrs struct {
	Address              [][]byte `protobuf:"bytes,1,rep,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Addrs) Reset()         { *m = Addrs{} }
func (m *Addrs) String() string { return proto.CompactTextString(m) }
func (*Addrs) ProtoMessage()    {}
func (*Addrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *Addrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addrs.Unmarshal(m, b)
}
func (m *Addrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addrs.Marshal(b, m, deterministic)
}
func (m *Addrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addrs.Merge(m, src)
}
func (m *Addrs) XXX_Size() int {
	return xxx_messageInfo_Addrs.Size(m)
}
func (m *Addrs) XXX_DiscardUnknown() {
	xxx_messageInfo_Addrs.DiscardUnknown(m)
}

var xxx_messageInfo_Addrs proto.InternalMessageInfo

func (m *Addrs) GetAddress() [][]byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func init() {
	proto.RegisterType((*Addrs)(nil), "bitmark.bitmarkd.rpc.Addrs")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 90 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x49, 0xca, 0x2c, 0xc9, 0x4d, 0x2c, 0xca, 0xd6, 0x83,
	0xd2, 0x29, 0x7a, 0x45, 0x05, 0xc9, 0x4a, 0x8a, 0x5c, 0xac, 0x8e, 0x29, 0x29, 0x45, 0xc5, 0x42,
	0x12, 0x5c, 0xec, 0x20, 0x46, 0x6a, 0x71, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0x4f, 0x10, 0x8c,
	0xeb, 0xc4, 0x1a, 0xc5, 0x5c, 0x54, 0x90, 0x9c, 0xc4, 0x06, 0x36, 0xc6, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x72, 0x0c, 0x48, 0x9c, 0x53, 0x00, 0x00, 0x00,
}
